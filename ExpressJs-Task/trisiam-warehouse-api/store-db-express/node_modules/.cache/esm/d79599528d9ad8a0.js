let express,warehouseRoute,itemRoute,manifestRoute,rentRoute,managerRoute,storageRoute,tenantRoute;_8d9‍.x([["default",()=>_8d9‍.o]]);_8d9‍.w("express",[["default",["express"],function(v){express=v}]]);_8d9‍.w("./warehouse.route",[["default",["warehouseRoute"],function(v){warehouseRoute=v}]]);_8d9‍.w("./item.route",[["default",["itemRoute"],function(v){itemRoute=v}]]);_8d9‍.w("./manifest.route",[["default",["manifestRoute"],function(v){manifestRoute=v}]]);_8d9‍.w("./rent.route",[["default",["rentRoute"],function(v){rentRoute=v}]]);_8d9‍.w("./storage-manager.route",[["default",["managerRoute"],function(v){managerRoute=v}]]);_8d9‍.w("./storage.route",[["default",["storageRoute"],function(v){storageRoute=v}]]);_8d9‍.w("./tenant.route",[["default",["tenantRoute"],function(v){tenantRoute=v}]]);








// const router = require('express').Router();
const swaggerUi = require('swagger-ui-express');
const swaggerDocument = require('./swagger.json');

_8d9‍.d(express.Router()
    .use('/api', swaggerUi.serve)
    .get('/api', swaggerUi.setup(swaggerDocument))
    .use('/warehouse', warehouseRoute)
    .use('/tenant', tenantRoute)
    .use('/storage', storageRoute)
    .use('/manager', managerRoute)
    .use('/rent', rentRoute)
    .use('/manifest', manifestRoute)
    .use('/item', itemRoute)
    .use((req, res, next) => {
        res.status(404).json({message : 'Not Found'});
    }));