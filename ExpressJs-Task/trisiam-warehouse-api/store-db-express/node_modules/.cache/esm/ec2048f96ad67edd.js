let getRepository,Rent;_6ad‍.x([["default",()=>RentService]]);_6ad‍.w("typeorm",[["getRepository",["getRepository"],function(v){getRepository=v}]]);_6ad‍.w("../models/rent.model",[["default",["Rent"],function(v){Rent=v}]]);


               class RentService {
    rentRepository() {
        return getRepository(Rent);
    }

    findAll() {
        return this.rentRepository().find({relations:['storage', 'storage_manager', 'tenant']});
    }

    findOne(id) {
        return this.rentRepository().findOne(id);
    }

    async create(rentData) {
        const rent = Object.assign(new Rent(), rentData);
        return await this.rentRepository().save(rent);
    }

    update(rentData) {
        return this.rentRepository().save(rentData);
    }

    delete(id) {
        return this.rentRepository().delete(id);
    }
}