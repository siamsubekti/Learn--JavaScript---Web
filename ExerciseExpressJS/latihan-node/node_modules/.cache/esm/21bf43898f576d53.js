let Router,bodyParse,TransactionService;_8f5‍.x([["default",()=>_8f5‍.o]]);_8f5‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_8f5‍.w("body-parser",[["default",["bodyParse"],function(v){bodyParse=v}]]);_8f5‍.w("../services/transaction.service",[["default",["TransactionService"],function(v){TransactionService=v}]]);



const transactionService = new TransactionService();

_8f5‍.d(Router()
    .get('/', async(req, res) => {
        try{
            const data = await transactionService.findAll();

            res.json({data});
        } catch (error) {
            res.status(500).json({message : error.message});
        }
    })
    .use(bodyParse.json())
    .post('/', async(req,res) => {
        try{
            let transaction = await transactionService.create(req.body);

            res.json({transaction});
        } catch {
            res.status(500).json({message: error.message});
        }
    }));